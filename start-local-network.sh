#!/bin/bash

echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏"
echo ""

# –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å –º–∞—à–∏–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
LOCAL_IP=$(ipconfig getifaddr en0 2>/dev/null || ip route get 1 | awk '{print $7; exit}' 2>/dev/null || hostname -I | awk '{print $1}' 2>/dev/null)

if [ -z "$LOCAL_IP" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: ifconfig | grep 'inet ' | grep -v '127.0.0.1'"
    exit 1
fi

echo "üìç –í–∞—à IP-–∞–¥—Ä–µ—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏: $LOCAL_IP"
echo ""

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ env —Ñ–∞–π–ª—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# Backend env
cat > backend/.env.local-network << EOF
PORT=5002
MONGODB_URI=mongodb://localhost:27017/technoline-store
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
NODE_ENV=development
FRONTEND_URL=http://$LOCAL_IP:3100
ADMIN_URL=http://$LOCAL_IP:3200
EOF

# Frontend env
cat > frontend/.env.local-network << EOF
NEXT_PUBLIC_API_URL=http://$LOCAL_IP:5002/api
EOF

# Admin env  
cat > admin/.env.local-network << EOF
VITE_API_URL=http://$LOCAL_IP:5002/api
EOF

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
wait_for_server() {
    local port=$1
    local service=$2
    local max_attempts=30
    local attempt=1
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ $service –Ω–∞ –ø–æ—Ä—Ç—É $port..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s "http://localhost:$port" > /dev/null 2>&1; then
            echo "‚úÖ $service –∑–∞–ø—É—â–µ–Ω"
            return 0
        fi
        
        echo "   –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—É $port"
    return 1
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "npm run dev" 2>/dev/null || true
pkill -f "next dev" 2>/dev/null || true
pkill -f "vite" 2>/dev/null || true
sleep 2

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏..."
echo ""

# –ó–∞–ø—É—Å–∫ Backend
echo "üîß –ó–∞–ø—É—Å–∫ Backend API..."
cd backend
cp .env.local-network .env
npm run dev &
BACKEND_PID=$!
cd ..

# –ó–∞–ø—É—Å–∫ Frontend
echo "üîß –ó–∞–ø—É—Å–∫ Frontend..."
cd frontend  
cp .env.local-network .env.local
npm run dev -- --hostname 0.0.0.0 --port 3100 &
FRONTEND_PID=$!
cd ..

# –ó–∞–ø—É—Å–∫ Admin
echo "üîß –ó–∞–ø—É—Å–∫ Admin –ø–∞–Ω–µ–ª–∏..."
cd admin
cp .env.local-network .env
npm run dev -- --host 0.0.0.0 --port 3200 &
ADMIN_PID=$!
cd ..

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏:"
echo ""
echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ                    –ê–î–†–ï–°–ê –î–õ–Ø –î–û–°–¢–£–ü–ê                      ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ üõí –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω:  http://$LOCAL_IP:3100                ‚îÇ"
echo "‚îÇ ‚öôÔ∏è  –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:     http://$LOCAL_IP:3200                ‚îÇ"  
echo "‚îÇ üîå API Backend:       http://$LOCAL_IP:5002                ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:                            ‚îÇ"
echo "‚îÇ üõí –ú–∞–≥–∞–∑–∏–Ω:           http://localhost:3100                 ‚îÇ"
echo "‚îÇ ‚öôÔ∏è  –ê–¥–º–∏–Ω–∫–∞:          http://localhost:3200                 ‚îÇ"
echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
echo ""
echo "üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç–∏ –∞–¥—Ä–µ—Å–∞"
echo "   —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–∫–æ–º–ø—å—é—Ç–µ—Ä, –ø–ª–∞–Ω—à–µ—Ç, —Ç–µ–ª–µ—Ñ–æ–Ω)"
echo ""
echo "üî• –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
echo $BACKEND_PID > .backend.pid
echo $FRONTEND_PID > .frontend.pid  
echo $ADMIN_PID > .admin.pid

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    if [ -f .backend.pid ]; then
        kill $(cat .backend.pid) 2>/dev/null || true
        rm -f .backend.pid
    fi
    
    if [ -f .frontend.pid ]; then
        kill $(cat .frontend.pid) 2>/dev/null || true
        rm -f .frontend.pid
    fi
    
    if [ -f .admin.pid ]; then
        kill $(cat .admin.pid) 2>/dev/null || true
        rm -f .admin.pid
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ env —Ñ–∞–π–ª—ã
    cd backend && [ -f env.example ] && cp env.example .env
    cd ../frontend && [ -f env.example ] && cp env.example .env.local  
    cd ../admin && [ -f env.example ] && cp env.example .env
    cd ..
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -f backend/.env.local-network
    rm -f frontend/.env.local-network
    rm -f admin/.env.local-network
    
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –ñ–¥–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–º–µ—Ç Ctrl+C
while true; do
    sleep 1
done 