const mongoose = require('mongoose');
const { User } = require('../dist/models/User');
const { Referral, ReferralClick } = require('../dist/models/Referral');
const { Order } = require('../dist/models/Order');
require('dotenv').config();

async function checkSpecificOrder() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/techno-line');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º –∑–∞–∫–∞–∑ TL-20250729-1589
    const order = await Order.findOne({ orderNumber: 'TL-20250729-1589' }).populate('userId');
    if (!order) {
      console.log('‚ùå –ó–∞–∫–∞–∑ TL-20250729-1589 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑: ${order.orderNumber}`);
    console.log(`üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${order.createdAt}`);
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${order.userId.email} (${order.userId.firstName} ${order.userId.lastName})`);
    console.log(`üí∞ –°—É–º–º–∞: ${order.total}‚ÇΩ`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${order.status}`);
    console.log(`üîó –ü—Ä–∏–≤–ª–µ—á–µ–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ: ${order.userId.referredBy ? '‚úÖ' : '‚ùå'}`);

    if (order.userId.referredBy) {
      const referrer = await User.findById(order.userId.referredBy);
      if (referrer) {
        console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email} (${referrer.firstName} ${referrer.lastName})`);
        console.log(`üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${referrer.referralCode}`);
      }
    } else {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ');
    }

    // –ù–∞–π–¥–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ —Å –∫–æ–¥–æ–º 3144FCD9
    const referrer = await User.findOne({ referralCode: '3144FCD9' });
    if (referrer) {
      console.log(`\nüîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–µ—Ä–µ —Å –∫–æ–¥–æ–º 3144FCD9:`);
      console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email} (${referrer.firstName} ${referrer.lastName})`);
      
      // –ù–∞–π–¥–µ–º –∫–ª–∏–∫–∏ —ç—Ç–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –æ–∫–æ–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫–∞–∑–∞
      const orderTime = new Date(order.createdAt);
      const startTime = new Date(orderTime.getTime() - 60 * 60 * 1000); // 1 —á–∞—Å –¥–æ
      const endTime = new Date(orderTime.getTime() + 60 * 60 * 1000); // 1 —á–∞—Å –ø–æ—Å–ª–µ
      
      console.log(`\nüëÜ –ü–æ–∏—Å–∫ –∫–ª–∏–∫–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥ —Å ${startTime} –¥–æ ${endTime}:`);
      
      const clicks = await ReferralClick.find({
        referrerId: referrer._id,
        clickDate: { $gte: startTime, $lte: endTime }
      });
      
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–∫–æ–≤: ${clicks.length}`);
      
      for (const click of clicks) {
        console.log(`\nüìä –ö–ª–∏–∫ ${click._id}:`);
        console.log(`  IP: ${click.ip}`);
        console.log(`  –î–∞—Ç–∞: ${click.clickDate}`);
        console.log(`  User-Agent: ${click.userAgent}`);
        console.log(`  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${click.convertedToRegistration ? '‚úÖ' : '‚ùå'}`);
        console.log(`  –ó–∞–∫–∞–∑: ${click.convertedToOrder ? '‚úÖ' : '‚ùå'}`);
        
        if (click.referredUserId) {
          const referredUser = await User.findById(click.referredUserId);
          if (referredUser) {
            console.log(`  –ü—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${referredUser.email}`);
          }
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —ç—Ç–∏–º —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º
      const referredUsers = await User.find({ referredBy: referrer._id });
      console.log(`\nüë• –í—Å–µ–≥–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${referredUsers.length}`);
      
      for (const user of referredUsers) {
        console.log(`  - ${user.email} (${user.firstName} ${user.lastName})`);
        console.log(`    –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.createdAt}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–∫–∞–∑—ã —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userOrders = await Order.find({ userId: user._id });
        console.log(`    –ó–∞–∫–∞–∑–æ–≤: ${userOrders.length}`);
        
        for (const userOrder of userOrders) {
          console.log(`      üì¶ ${userOrder.orderNumber}: ${userOrder.status}, ${userOrder.total}‚ÇΩ, ${userOrder.createdAt}`);
          
          if (userOrder.status === 'delivered') {
            // –ü—Ä–æ–≤–µ—Ä–∏–º, –±—ã–ª–∞ –ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏—è
            const commissionClick = await ReferralClick.findOne({
              orderId: userOrder._id,
              commissionPaid: true
            });
            console.log(`        –ö–æ–º–∏—Å—Å–∏—è: ${commissionClick ? '‚úÖ ' + commissionClick.commission + '‚ÇΩ' : '‚ùå'}`);
          }
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
      const referralRecord = await Referral.findOne({ referrerId: referrer._id });
      if (referralRecord) {
        console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞:`);
        console.log(`  –ö–ª–∏–∫–∏: ${referralRecord.clicks}`);
        console.log(`  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${referralRecord.registrations}`);
        console.log(`  –ó–∞–∫–∞–∑—ã: ${referralRecord.orders}`);
        console.log(`  –ö–æ–º–∏—Å—Å–∏—è: ${referralRecord.totalCommission}‚ÇΩ`);
      }
      
      console.log(`\nüí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-—Ä–µ—Ñ–µ—Ä–µ—Ä–∞:`);
      console.log(referrer.referralStats);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º, –º–æ–∂–µ–º –ª–∏ –º—ã —Å–≤—è–∑–∞—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    if (!order.userId.referredBy && referrer) {
      console.log(`\nüîß –ü–æ–ø—ã—Ç–∫–∞ —Å–≤—è–∑–∞—Ç—å –∑–∞–∫–∞–∑ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π...`);
      
      // –ù–∞–π–¥–µ–º –∫–ª–∏–∫ –ø–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏
      const orderTime = new Date(order.createdAt);
      const startTime = new Date(orderTime.getTime() - 2 * 60 * 60 * 1000); // 2 —á–∞—Å–∞ –¥–æ
      
      const possibleClick = await ReferralClick.findOne({
        referrerId: referrer._id,
        ip: '192.168.50.69', // IP –∏–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        clickDate: { $gte: startTime, $lte: orderTime },
        convertedToRegistration: false
      });
      
      if (possibleClick) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª–∏–∫: ${possibleClick._id}`);
        console.log(`–í—Ä–µ–º—è –∫–ª–∏–∫–∞: ${possibleClick.clickDate}`);
        console.log(`–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${order.createdAt}`);
        
        // –ú–æ–∂–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤—è–∑–∞—Ç—å (–Ω–æ —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ)
        console.log(`‚ö†Ô∏è –ó–∞–∫–∞–∑ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ`);
      } else {
        console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª–∏–∫ –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è`);
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

checkSpecificOrder(); 