const mongoose = require('mongoose');
const { User } = require('../dist/models/User');
const { Referral } = require('../dist/models/Referral');
const { Order } = require('../dist/models/Order');
const { getAllReferrals } = require('../dist/controllers/referralController');
require('dotenv').config();

async function finalTestAdminStats() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/techno-line');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    console.log('\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ\n');

    // –ù–∞–π–¥–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    const referrer = await User.findOne({ referralCode: '3144FCD9' });
    if (!referrer) {
      console.log('‚ùå –†–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log(`\nüìä –ê–ö–¢–£–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï (user.referralStats):`);
    console.log(`   –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${referrer.referralStats?.totalEarnings || 0}‚ÇΩ`);
    console.log(`   –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${referrer.referralStats?.availableBalance || 0}‚ÇΩ`);
    console.log(`   –í—ã–≤–µ–¥–µ–Ω–æ: ${referrer.referralStats?.withdrawnAmount || 0}‚ÇΩ`);
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã: ${referrer.referralStats?.activeReferrals || 0}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const referralRecord = await Referral.findOne({ referrerId: referrer._id });
    console.log(`\nüìä –£–°–¢–ê–†–ï–í–®–ò–ï –î–ê–ù–ù–´–ï (—Ç–∞–±–ª–∏—Ü–∞ Referral):`);
    console.log(`   –û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${referralRecord?.totalCommission || 0}‚ÇΩ`);
    console.log(`   –î–æ—Å—Ç—É–ø–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${referralRecord?.availableCommission || 0}‚ÇΩ`);
    console.log(`   –í—ã–≤–µ–¥–µ–Ω–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${referralRecord?.withdrawnCommission || 0}‚ÇΩ`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∞–¥–º–∏–Ω–∫–∏
    console.log(`\nüì° –¢–ï–°–¢–ò–†–£–ï–ú API –ê–î–ú–ò–ù–ö–ò:`);
    
    const mockReq = { query: { page: '1', limit: '20' } };
    let apiResponse = null;

    const mockRes = {
      json: (data) => {
        apiResponse = data;
      },
      status: (code) => ({
        json: (data) => {
          console.log(`‚ùå –û—à–∏–±–∫–∞ API (${code}):`, data);
        }
      })
    };

    await getAllReferrals(mockReq, mockRes);

    if (apiResponse) {
      const ourReferrer = apiResponse.referrals.find(r => r.user.email === referrer.email);
      
      if (ourReferrer) {
        console.log(`\nüéØ –î–ê–ù–ù–´–ï –í –ê–î–ú–ò–ù–ö–ï –¥–ª—è ${referrer.email}:`);
        console.log(`   –û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${ourReferrer.stats.totalCommission}‚ÇΩ`);
        console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: ${ourReferrer.stats.availableCommission}‚ÇΩ`);
        console.log(`   –í—ã–≤–µ–¥–µ–Ω–æ: ${ourReferrer.stats.withdrawnCommission}‚ÇΩ`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
        const correctAvailable = ourReferrer.stats.availableCommission === (referrer.referralStats?.availableBalance || 0);
        const correctWithdrawn = ourReferrer.stats.withdrawnCommission === (referrer.referralStats?.withdrawnAmount || 0);
        const correctTotal = ourReferrer.stats.totalCommission === (referralRecord?.totalCommission || 0);

        console.log(`\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò:`);
        console.log(`   –û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${correctTotal ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'}`);
        console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: ${correctAvailable ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'}`);
        console.log(`   –í—ã–≤–µ–¥–µ–Ω–æ: ${correctWithdrawn ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'}`);

        if (correctAvailable && correctWithdrawn && correctTotal) {
          console.log(`\nüéâ –í–°–ï –î–ê–ù–ù–´–ï –ö–û–†–†–ï–ö–¢–ù–´! –ê–¥–º–∏–Ω–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.`);
        } else {
          console.log(`\n‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö.`);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
        const totalStats = apiResponse.referrals.reduce((acc, ref) => ({
          totalCommission: acc.totalCommission + ref.stats.totalCommission,
          availableCommission: acc.availableCommission + ref.stats.availableCommission,
          withdrawnCommission: acc.withdrawnCommission + ref.stats.withdrawnCommission
        }), {
          totalCommission: 0,
          availableCommission: 0,
          withdrawnCommission: 0
        });

        console.log(`\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:`);
        console.log(`   –û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${totalStats.totalCommission.toFixed(2)}‚ÇΩ`);
        console.log(`   –ö –≤—ã–≤–æ–¥—É: ${totalStats.availableCommission.toFixed(2)}‚ÇΩ`);
        console.log(`   –í—ã–≤–µ–¥–µ–Ω–æ: ${totalStats.withdrawnCommission.toFixed(2)}‚ÇΩ`);

        // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã
        console.log(`\nüì¶ –ü–†–û–í–ï–†–ö–ê –ó–ê–ö–ê–ó–û–í:`);
        const deliveredOrders = await Order.find({
          userId: { $in: await User.find({ referredBy: referrer._id }).distinct('_id') },
          status: 'delivered'
        }).populate('userId');

        console.log(`   –î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${deliveredOrders.length}`);
        
        for (const order of deliveredOrders) {
          const commission = Math.round(order.total * 0.015);
          console.log(`   ${order.orderNumber}: ${order.total}‚ÇΩ ‚Üí –∫–æ–º–∏—Å—Å–∏—è ${commission}‚ÇΩ (${order.userId.email})`);
        }

      } else {
        console.log('‚ùå –†–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ API');
      }
    } else {
      console.log('‚ùå API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ');
    }

    console.log(`\nüìù –ò–¢–û–ì:`);
    console.log(`   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    console.log(`   ‚úÖ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    console.log(`   ‚úÖ –û—Ç–º–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    console.log(`   ‚úÖ –ê–¥–º–∏–Ω–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
    console.log(`\nüéâ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ê!`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

finalTestAdminStats(); 