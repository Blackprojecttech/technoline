import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { ProductView } from '../src/models/ProductView';
import { User } from '../src/models/User';
import { Product } from '../src/models/Product';

dotenv.config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/technoline');

async function checkProductViews() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤...\n');

    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    const totalViews = await ProductView.countDocuments();
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö: ${totalViews}`);

    if (totalViews === 0) {
      console.log('‚ùå –ó–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
    const recentViews = await ProductView.find()
      .sort({ viewedAt: -1 })
      .limit(10)
      .populate('userId', 'firstName lastName email')
      .populate('productId', 'name price');

    console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö:');
    recentViews.forEach((view, index) => {
      const user = view.userId as any;
      const product = view.productId as any;
      console.log(`${index + 1}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user ? `${user.firstName} ${user.lastName} (${user.email})` : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
      console.log(`   –¢–æ–≤–∞—Ä: ${product ? product.name : '–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä'}`);
      console.log(`   –î–∞—Ç–∞: ${view.viewedAt.toLocaleString('ru-RU')}`);
      console.log(`   IP: ${view.ip || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log('');
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const userStats = await ProductView.aggregate([
      {
        $group: {
          _id: '$userId',
          viewCount: { $sum: 1 }
        }
      },
      {
        $lookup: {
          from: 'users',
          localField: '_id',
          foreignField: '_id',
          as: 'user'
        }
      },
      {
        $unwind: '$user'
      },
      {
        $project: {
          firstName: '$user.firstName',
          lastName: '$user.lastName',
          email: '$user.email',
          viewCount: 1
        }
      },
      {
        $sort: { viewCount: -1 }
      }
    ]);

    console.log('üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:');
    userStats.forEach((stat, index) => {
      console.log(`${index + 1}. ${stat.firstName} ${stat.lastName} (${stat.email}): ${stat.viewCount} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
  } finally {
    mongoose.disconnect();
  }
}

checkProductViews(); 