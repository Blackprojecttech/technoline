import mongoose from 'mongoose';
import dotenv from 'dotenv';
import DeliveryMethod from '../src/models/DeliveryMethod';

dotenv.config();

const updateDeliveryMethodsIntervalType = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/technoline';
    await mongoose.connect(mongoUri);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏, –¥–æ–±–∞–≤–ª—è—è –ø–æ–ª–µ intervalType
    const result = await DeliveryMethod.updateMany(
      { intervalType: { $exists: false } },
      { 
        $set: { 
          intervalType: 'standard' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∏–ø
        } 
      }
    );

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.modifiedCount} —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏`);

    // –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –∏—Ö –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
    const deliveryMethods = await DeliveryMethod.find({});
    console.log('\nüìã –°–ø–∏—Å–æ–∫ —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏:');
    deliveryMethods.forEach((method, index) => {
      console.log(`${index + 1}. ${method.name} - intervalType: ${method.intervalType || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    });

    console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
updateDeliveryMethodsIntervalType(); 