const mongoose = require('mongoose');
const { User } = require('../dist/models/User');
const { Referral, ReferralClick } = require('../dist/models/Referral');
const { Order } = require('../dist/models/Order');
require('dotenv').config();

async function debugReferralIssue() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/techno-line');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã –∏ –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    console.log('\nüîç –ü–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é...');
    
    const referrals = await Referral.find({}).populate('referrerId', 'email firstName lastName referralCode');
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${referrals.length}`);
    
    for (const referral of referrals) {
      console.log(`\nüë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referral.referrerId.email} (${referral.referrerId.firstName} ${referral.referrerId.lastName})`);
      console.log(`üîó –ö–æ–¥: ${referral.referralCode}`);
      console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –∫–ª–∏–∫–∏=${referral.clicks}, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏=${referral.registrations}, –∑–∞–∫–∞–∑—ã=${referral.orders}`);
      
      // –ù–∞–π–¥–µ–º –≤—Å–µ –∫–ª–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
      const clicks = await ReferralClick.find({ referrerId: referral.referrerId._id });
      console.log(`üëÜ –ö–ª–∏–∫–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${clicks.length}`);
      
      for (const click of clicks) {
        console.log(`  - IP: ${click.ip}, –î–∞—Ç–∞: ${click.clickDate}`);
        console.log(`    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${click.convertedToRegistration ? '‚úÖ' : '‚ùå'}`);
        console.log(`    –ó–∞–∫–∞–∑: ${click.convertedToOrder ? '‚úÖ' : '‚ùå'}`);
        console.log(`    –ö–æ–º–∏—Å—Å–∏—è: ${click.commission || 0}`);
        
        if (click.referredUserId) {
          const referredUser = await User.findById(click.referredUserId);
          if (referredUser) {
            console.log(`    –†–µ—Ñ–µ—Ä–∞–ª: ${referredUser.email} (${referredUser.firstName} ${referredUser.lastName})`);
            
            // –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–∫–∞–∑—ã —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userOrders = await Order.find({ userId: click.referredUserId });
            console.log(`    –ó–∞–∫–∞–∑–æ–≤ —É —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${userOrders.length}`);
            
            for (const order of userOrders) {
              console.log(`      –ó–∞–∫–∞–∑ ${order.orderNumber}: —Å—Ç–∞—Ç—É—Å=${order.status}, —Å—É–º–º–∞=${order.total}`);
            }
          }
        }
      }
      
      // –ù–∞–π–¥–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω—ã —ç—Ç–∏–º —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º
      const referredUsers = await User.find({ referredBy: referral.referrerId._id });
      console.log(`üë• –ü—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${referredUsers.length}`);
      
      for (const refUser of referredUsers) {
        console.log(`  - ${refUser.email} (${refUser.firstName} ${refUser.lastName})`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–∫–∞–∑—ã –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const orders = await Order.find({ userId: refUser._id });
        console.log(`    –ó–∞–∫–∞–∑–æ–≤: ${orders.length}`);
        
        for (const order of orders) {
          console.log(`      ${order.orderNumber}: ${order.status}, ${order.total}‚ÇΩ, ${order.createdAt}`);
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º delivered
    console.log('\nüì¶ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:');
    const deliveredOrders = await Order.find({ status: 'delivered' })
      .populate('userId', 'email firstName lastName referredBy')
      .sort({ updatedAt: -1 })
      .limit(10);
    
    for (const order of deliveredOrders) {
      console.log(`\nüì¶ –ó–∞–∫–∞–∑ ${order.orderNumber}:`);
      console.log(`  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${order.userId.email}`);
      console.log(`  –ü—Ä–∏–≤–ª–µ—á–µ–Ω: ${order.userId.referredBy ? '‚úÖ' : '‚ùå'}`);
      console.log(`  –°—É–º–º–∞: ${order.total}‚ÇΩ`);
      console.log(`  –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.updatedAt}`);
      
      if (order.userId.referredBy) {
        const referrer = await User.findById(order.userId.referredBy);
        if (referrer) {
          console.log(`  –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email} (${referrer.firstName} ${referrer.lastName})`);
          console.log(`  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞:`, referrer.referralStats);
          
          // –ü—Ä–æ–≤–µ—Ä–∏–º, –±—ã–ª–∞ –ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏—è –∑–∞ —ç—Ç–æ—Ç –∑–∞–∫–∞–∑
          const commissionClick = await ReferralClick.findOne({
            orderId: order._id,
            commissionPaid: true
          });
          console.log(`  –ö–æ–º–∏—Å—Å–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∞: ${commissionClick ? '‚úÖ' : '‚ùå'}`);
          if (commissionClick) {
            console.log(`  –†–∞–∑–º–µ—Ä –∫–æ–º–∏—Å—Å–∏–∏: ${commissionClick.commission}‚ÇΩ`);
          }
        }
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

debugReferralIssue(); 