const mongoose = require('mongoose');
const { User } = require('../dist/models/User');
const { Referral, ReferralClick } = require('../dist/models/Referral');
const { Order } = require('../dist/models/Order');
require('dotenv').config();

async function checkOrder5156() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/techno-line');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º –∑–∞–∫–∞–∑ TL-20250729-5156
    const order = await Order.findOne({ orderNumber: 'TL-20250729-5156' }).populate('userId');
    if (!order) {
      console.log('‚ùå –ó–∞–∫–∞–∑ TL-20250729-5156 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑: ${order.orderNumber}`);
    console.log(`üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${order.createdAt}`);
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${order.userId.email} (${order.userId.firstName} ${order.userId.lastName})`);
    console.log(`üí∞ –°—É–º–º–∞: ${order.total}‚ÇΩ`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${order.status}`);
    console.log(`üîó –ü—Ä–∏–≤–ª–µ—á–µ–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ: ${order.userId.referredBy ? '‚úÖ' : '‚ùå'}`);

    if (order.userId.referredBy) {
      const referrer = await User.findById(order.userId.referredBy);
      if (referrer) {
        console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email} (${referrer.firstName} ${referrer.lastName})`);
        console.log(`üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${referrer.referralCode}`);
      }
    }

    // –ù–∞–π–¥–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ —Å –∫–æ–¥–æ–º 3144FCD9
    const referrer = await User.findOne({ referralCode: '3144FCD9' });
    if (referrer) {
      console.log(`\nüîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–µ—Ä–µ —Å –∫–æ–¥–æ–º 3144FCD9:`);
      console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email} (${referrer.firstName} ${referrer.lastName})`);
      
      // –ù–∞–π–¥–µ–º –≤—Å–µ –∫–ª–∏–∫–∏ —ç—Ç–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
      const allClicks = await ReferralClick.find({ referrerId: referrer._id }).sort({ clickDate: -1 });
      console.log(`\nüëÜ –í—Å–µ –∫–ª–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ (${allClicks.length}):`);
      
      for (const click of allClicks) {
        console.log(`\nüìä –ö–ª–∏–∫ ${click._id}:`);
        console.log(`  IP: ${click.ip}`);
        console.log(`  –î–∞—Ç–∞: ${click.clickDate}`);
        console.log(`  User-Agent: ${click.userAgent}`);
        console.log(`  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${click.convertedToRegistration ? '‚úÖ' : '‚ùå'}`);
        console.log(`  –ó–∞–∫–∞–∑: ${click.convertedToOrder ? '‚úÖ' : '‚ùå'}`);
        
        if (click.referredUserId) {
          const referredUser = await User.findById(click.referredUserId);
          if (referredUser) {
            console.log(`  –ü—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${referredUser.email}`);
          }
        }
      }
      
      // –ù–∞–π–¥–µ–º –∫–ª–∏–∫–∏ –≤ –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫–∞–∑–∞
      const orderTime = new Date(order.createdAt);
      const startTime = new Date(orderTime.getTime() - 2 * 60 * 60 * 1000); // 2 —á–∞—Å–∞ –¥–æ
      const endTime = new Date(orderTime.getTime() + 30 * 60 * 1000); // 30 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ
      
      console.log(`\nüïê –ü–æ–∏—Å–∫ –∫–ª–∏–∫–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥ —Å ${startTime} –¥–æ ${endTime}:`);
      
      const relevantClicks = await ReferralClick.find({
        referrerId: referrer._id,
        clickDate: { $gte: startTime, $lte: endTime }
      });
      
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–∫–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥–µ: ${relevantClicks.length}`);
      
      if (relevantClicks.length === 0) {
        console.log('‚ùå –ù–µ—Ç –∫–ª–∏–∫–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞!');
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('  1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ø–µ—Ä–µ—Ö–æ–¥–∏–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ');
        console.log('  2. –ö—É–∫–∏ –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã');
        console.log('  3. –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∫–ª–∏–∫–æ–≤');
        console.log('  4. –†–∞–∑–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –æ–∫–æ–ª–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å IP 192.168.50.69
      console.log(`\nüîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ —Å IP 192.168.50.69 –æ–∫–æ–ª–æ –≤—Ä–µ–º–µ–Ω–∏ ${orderTime}:`);
      
      const orders = await Order.find({
        createdAt: { $gte: startTime, $lte: endTime }
      }).populate('userId');
      
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥–µ: ${orders.length}`);
      
      for (const ord of orders) {
        console.log(`\nüì¶ ${ord.orderNumber} (${ord.createdAt}):`);
        console.log(`  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ord.userId.email}`);
        console.log(`  –ü—Ä–∏–≤–ª–µ—á–µ–Ω: ${ord.userId.referredBy ? '‚úÖ' : '‚ùå'}`);
        console.log(`  –ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${ord.userId.isPartiallyRegistered ? '‚úÖ' : '‚ùå'}`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
      const referralRecord = await Referral.findOne({ referrerId: referrer._id });
      if (referralRecord) {
        console.log(`\nüìà –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞:`);
        console.log(`  –ö–ª–∏–∫–∏: ${referralRecord.clicks}`);
        console.log(`  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${referralRecord.registrations}`);
        console.log(`  –ó–∞–∫–∞–∑—ã: ${referralRecord.orders}`);
        console.log(`  –ö–æ–º–∏—Å—Å–∏—è: ${referralRecord.totalCommission}‚ÇΩ`);
      }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    console.log(`\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:`);
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫–∞–∑–∞:`);
    console.log(`  Email: ${order.userId.email}`);
    console.log(`  –ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${order.userId.isPartiallyRegistered}`);
    console.log(`  –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${order.userId.createdAt}`);
    console.log(`  –ü—Ä–∏–≤–ª–µ—á–µ–Ω: ${order.userId.referredBy ? '–î–∞' : '–ù–µ—Ç'}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

checkOrder5156(); 