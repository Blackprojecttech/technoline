const mongoose = require('mongoose');
const { User } = require('../dist/models/User');
const { Referral, ReferralClick } = require('../dist/models/Referral');
const { Order } = require('../dist/models/Order');
const { processReferralCommission } = require('../dist/controllers/referralController');
require('dotenv').config();

async function fixSpecificOrder() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/techno-line');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º –∑–∞–∫–∞–∑ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const order = await Order.findOne({ orderNumber: 'TL-20250729-1589' }).populate('userId');
    const referrer = await User.findOne({ referralCode: '3144FCD9' });
    
    if (!order || !referrer) {
      console.log('‚ùå –ó–∞–∫–∞–∑ –∏–ª–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log(`üì¶ –ó–∞–∫–∞–∑: ${order.orderNumber} (${order.total}‚ÇΩ)`);
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${order.userId.email}`);
    console.log(`üë§ –†–µ—Ñ–µ—Ä–µ—Ä: ${referrer.email}`);

    // –ù–∞–π–¥–µ–º –∫–ª–∏–∫
    const click = await ReferralClick.findById('6888ea5ae01de8b2089371c1');
    if (!click) {
      console.log('‚ùå –ö–ª–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log(`\nüîß –°–≤—è–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π...`);

    // 1. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Ä–µ—Ñ–µ—Ä—É
    if (!order.userId.referredBy) {
      order.userId.referredBy = referrer._id;
      await order.userId.save();
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä–µ—Ä—É');
    }

    // 2. –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∏–∫ –∫–∞–∫ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    if (!click.convertedToRegistration) {
      click.convertedToRegistration = true;
      click.registrationDate = order.createdAt;
      click.referredUserId = order.userId._id;
      await click.save();
      console.log('‚úÖ –ö–ª–∏–∫ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
      await Referral.updateOne(
        { referrerId: referrer._id },
        { $inc: { registrations: 1 } }
      );

      await User.updateOne(
        { _id: referrer._id },
        { $inc: { 'referralStats.totalReferrals': 1 } }
      );
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π');
    }

    // 3. –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω, –Ω–∞—á–∏—Å–ª—è–µ–º –∫–æ–º–∏—Å—Å–∏—é
    if (order.status === 'delivered' && !click.convertedToOrder) {
      console.log('üí∞ –ù–∞—á–∏—Å–ª—è–µ–º –∫–æ–º–∏—Å—Å–∏—é –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑...');
      await processReferralCommission(String(order._id));
      console.log('‚úÖ –ö–æ–º–∏—Å—Å–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∞');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
    
    const updatedReferrer = await User.findById(referrer._id);
    const updatedReferral = await Referral.findOne({ referrerId: referrer._id });
    const updatedClick = await ReferralClick.findById(click._id);
    
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞:', updatedReferrer.referralStats);
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', {
      clicks: updatedReferral.clicks,
      registrations: updatedReferral.registrations,
      orders: updatedReferral.orders,
      totalCommission: updatedReferral.totalCommission
    });
    console.log('–°—Ç–∞—Ç—É—Å –∫–ª–∏–∫–∞:', {
      convertedToRegistration: updatedClick.convertedToRegistration,
      convertedToOrder: updatedClick.convertedToOrder,
      commission: updatedClick.commission
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

fixSpecificOrder(); 