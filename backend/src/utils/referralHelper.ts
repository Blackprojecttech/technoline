import { Request } from 'express';
import { User } from '../models/User';
import { Referral, ReferralClick } from '../models/Referral';
import mongoose from 'mongoose';

export async function linkOrderToReferralSystem(req: Request, userId: mongoose.Types.ObjectId): Promise<void> {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ –∫—É–∫–∏ –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const referralCode = req.cookies?.referralCode || (req.headers && req.headers['x-referral-code']) as string;
    
    // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await User.findById(userId);
    if (!user) {
      return;
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä—É, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (user.referredBy) {
      console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ');
      return;
    }

    let referrer = null;
    let foundByCode = false;

    // –ü–æ–ø—ã—Ç–∫–∞ 1: –ü–æ–∏—Å–∫ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É –∏–∑ –∫—É–∫–∏/–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    if (referralCode) {
      referrer = await User.findOne({ referralCode });
      if (referrer) {
        foundByCode = true;
        console.log('‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä –Ω–∞–π–¥–µ–Ω –ø–æ –∫–æ–¥—É –∏–∑ –∫—É–∫–∏:', referralCode);
      }
    }

    // –ü–æ–ø—ã—Ç–∫–∞ 2: –ü–æ–∏—Å–∫ –ø–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏ (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º)
    if (!referrer) {
      const userIP = req.ip || req.connection?.remoteAddress;
      const userCreationTime = user.createdAt;
      const searchStartTime = new Date(userCreationTime.getTime() - 2 * 60 * 60 * 1000); // 2 —á–∞—Å–∞ –¥–æ
      
      console.log('üîç –ü–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏:', {
        ip: userIP,
        timeRange: `${searchStartTime} - ${userCreationTime}`
      });

      // –ù–∞–π–¥–µ–º –∫–ª–∏–∫–∏ –ø–æ IP –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const recentClicks = await ReferralClick.find({
        ip: userIP,
        clickDate: { $gte: searchStartTime, $lte: userCreationTime },
        referredUserId: { $exists: false } // –ï—â–µ –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      }).sort({ clickDate: -1 }).limit(1);

      if (recentClicks.length > 0) {
        const recentClick = recentClicks[0];
        referrer = await User.findById(recentClick.referrerId);
        if (referrer) {
          console.log('‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä –Ω–∞–π–¥–µ–Ω –ø–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏:', {
            referrerEmail: referrer.email,
            clickTime: recentClick.clickDate,
            orderTime: userCreationTime,
            ip: userIP
          });
        }
      }
    }

    if (!referrer) {
      console.log('‚ùå –†–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –ø–æ –∫–æ–¥—É, –Ω–∏ –ø–æ IP/–≤—Ä–µ–º–µ–Ω–∏');
      return;
    }

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Ä–µ—Ñ–µ—Ä—É
    user.referredBy = referrer._id as mongoose.Types.ObjectId;
    await user.save();

    console.log('üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ:', {
      method: foundByCode ? '–ü–æ –∫–æ–¥—É –∏–∑ –∫—É–∫–∏' : '–ü–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏',
      referrerEmail: referrer.email,
      userId: user._id,
      userEmail: user.email
    });

    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∏–∫
    let click = await ReferralClick.findOne({
      referrerId: referrer._id,
      ip: req.ip || req.connection?.remoteAddress,
      referredUserId: { $exists: false }
    });

    if (!click) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–ª–∏–∫, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
      click = new ReferralClick({
        referralId: await Referral.findOne({ referrerId: referrer._id }).then(r => r?._id),
        referrerId: referrer._id,
        ip: req.ip || req.connection?.remoteAddress,
        userAgent: req.get('User-Agent') || 'Auto-detected',
        clickDate: new Date(user.createdAt.getTime() - 5 * 60 * 1000), // 5 –º–∏–Ω—É—Ç –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        convertedToRegistration: false,
        convertedToOrder: false,
        commissionPaid: false
      });
      await click.save();

      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤
      await Referral.updateOne(
        { referrerId: referrer._id },
        { $inc: { clicks: 1 } }
      );

      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–ª–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è');
    }

    // –°–≤—è–∑—ã–≤–∞–µ–º –∫–ª–∏–∫ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    (click as any).referredUserId = user._id;
    await click.save();

    console.log('üîó –ö–ª–∏–∫ —Å–≤—è–∑–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', {
      clickId: click._id,
      referredUserId: user._id
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π:', error);
  }
} 