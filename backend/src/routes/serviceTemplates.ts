import express from 'express';
import { auth, adminOnly } from '../middleware/auth';

const router = express.Router();

// –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥ (–≤ –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ MongoDB)
let serviceTemplates: Array<{
  id: string;
  name: string;
  price: number;
  costPrice: number;
  createdAt: string;
}> = [];

// GET /api/service-templates - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ª—É–≥
router.get('/', auth, adminOnly, (req, res) => {
  try {
    console.log('üìã –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥, –Ω–∞–π–¥–µ–Ω–æ:', serviceTemplates.length);
    res.json(serviceTemplates);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥' });
    return;
  }
});

// POST /api/service-templates - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ª—É–≥
router.post('/', auth, adminOnly, (req, res) => {
  try {
    const { templates } = req.body;
    
    if (!Array.isArray(templates)) {
      res.status(400).json({ message: '–ü–æ–ª–µ templates –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º' });
      return;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    const newTemplates = templates.filter(template => 
      template.name && 
      template.name.trim() && 
      !serviceTemplates.find(existing => existing.name === template.name.trim())
    );
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
    serviceTemplates.push(...newTemplates);
    
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —É—Å–ª—É–≥:', newTemplates.map(t => t.name));
    console.log('üìã –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥:', serviceTemplates.length);
    
    res.json({ 
      message: '–®–∞–±–ª–æ–Ω—ã —É—Å–ª—É–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
      added: newTemplates.length,
      total: serviceTemplates.length
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ —É—Å–ª—É–≥' });
    return;
  }
});

// DELETE /api/service-templates/:id - —É–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω —É—Å–ª—É–≥–∏
router.delete('/:id', auth, adminOnly, (req, res) => {
  try {
    const { id } = req.params;
    const initialLength = serviceTemplates.length;
    
    serviceTemplates = serviceTemplates.filter(template => template.id !== id);
    
    if (serviceTemplates.length < initialLength) {
      console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω —à–∞–±–ª–æ–Ω —É—Å–ª—É–≥–∏ —Å ID:', id);
      res.json({ message: '–®–∞–±–ª–æ–Ω —É—Å–ª—É–≥–∏ —É–¥–∞–ª–µ–Ω' });
    } else {
      res.status(404).json({ message: '–®–∞–±–ª–æ–Ω —É—Å–ª—É–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω' });
      return;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ —É—Å–ª—É–≥–∏' });
    return;
  }
});

export default router; 