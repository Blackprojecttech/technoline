'use client';

import { useState, useEffect } from 'react';
import { useParams, useRouter } from 'next/navigation';
import { motion } from 'framer-motion';
import { ArrowLeft, Package, Calendar, MapPin, Phone, Mail, DollarSign, Truck, CheckCircle, Clock, XCircle } from 'lucide-react';
import OrderStatus from '@/components/OrderStatus';
import { useAuth } from '@/contexts/AuthContext';
import ProtectedRoute from '@/components/auth/ProtectedRoute';
import Header from '@/components/layout/Header';
import Footer from '@/components/layout/Footer';
import Link from 'next/link';
import { ordersAPI, getAuthToken } from '@/lib/api';
import { useOrderSocket } from '@/hooks/useOrderSocket';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø—ã –∏–∑ API
type Order = any; // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º any –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ç–∏–ø–æ–≤

export default function OrderDetailsPage() {
  const params = useParams();
  const router = useRouter();
  const { user } = useAuth();
  const [order, setOrder] = useState<Order | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  const [showCallConfirmation, setShowCallConfirmation] = useState(false);
  const [isCallRequestLoading, setIsCallRequestLoading] = useState(false);

  const orderId = params.id as string;

  // Socket.IO –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
  console.log('üîå Setting up Socket.IO for order:', orderId);
  useOrderSocket({
    orderId,
    onOrderUpdate: (data) => {
      console.log('üì¶ Order updated via Socket.IO:', data);
      console.log('üì¶ Order ID match check:', { receivedId: data.orderId, currentId: orderId });
      // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è
      const token = getAuthToken();
      if (token && data.orderId === orderId) {
        console.log('üì¶ Refreshing order data...');
        ordersAPI.getOrderById(token, orderId).then(setOrder);
      }
    }
  });

  useEffect(() => {
    const fetchOrder = async () => {
      try {
        const token = getAuthToken();
        console.log('üîë –¢–æ–∫–µ–Ω:', token ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
        console.log('üÜî ID –∑–∞–∫–∞–∑–∞:', orderId);
        
        if (!token) {
          console.log('‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω');
          router.push('/login');
          return;
        }

        console.log('üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑...');
        const orderData = await ordersAPI.getOrderById(token, orderId);
        console.log('‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω:', orderData);
        setOrder(orderData);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        if (error instanceof Error) {
          if (error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω')) {
            setError('–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω');
          } else if (error.message.includes('–∑–∞–ø—Ä–µ—â–µ–Ω')) {
            setError('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
          } else {
            setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞');
          }
        } else {
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞');
        }
      } finally {
        setIsLoading(false);
      }
    };

    if (orderId) {
      fetchOrder();
    }
  }, [orderId, router]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (!orderId || isLoading) return;

    const interval = setInterval(async () => {
      try {
        const token = getAuthToken();
        if (!token) return;

        const orderData = await ordersAPI.getOrderById(token, orderId);
        setOrder(orderData);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
      }
    }, 15000); // 15 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(interval);
  }, [orderId, isLoading]);

  const formatCurrency = (amount: number) => {
    if (amount === 0) return '0 ‚ÇΩ';
    return `${amount.toLocaleString('ru-RU')} ‚ÇΩ`;
  };

  const getStatusInfo = (status: string) => {
    switch (status) {
      case 'delivered':
        return { icon: CheckCircle, color: 'text-green-600', bg: 'bg-green-100', text: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω' };
      case 'shipped':
        return { icon: Truck, color: 'text-blue-600', bg: 'bg-blue-100', text: 'üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω' };
      case 'processing':
        return { icon: Clock, color: 'text-yellow-600', bg: 'bg-yellow-100', text: '‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ' };
      case 'confirmed':
        return { icon: CheckCircle, color: 'text-purple-600', bg: 'bg-purple-100', text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' };
      case 'cancelled':
        return { icon: XCircle, color: 'text-red-600', bg: 'bg-red-100', text: '‚ùå –û—Ç–º–µ–Ω–µ–Ω' };
      default:
        return { icon: Clock, color: 'text-gray-600', bg: 'bg-gray-100', text: 'üÜï –û–∂–∏–¥–∞–µ—Ç' };
    }
  };

  const getDeliveryMethodDisplayName = (method: any) => {
    if (!method) return '';
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å displayName, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (method.displayName) {
      return method.displayName;
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ
    switch (method.name) {
      case 'cdek_pickup':
        return '–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –°–î–≠–ö';
      case 'cdek_courier':
        return '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –°–î–≠–ö';
      case 'pickup':
        return '–°–∞–º–æ–≤—ã–≤–æ–∑';
      case 'courier':
        return '–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞';
      case 'post':
        return '–ü–æ—á—Ç–æ–≤–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞';
      default:
        return method.name || '–î–æ—Å—Ç–∞–≤–∫–∞';
    }
  };

  const isPickup = (method: any) => {
    if (!method) return false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ç–∏–ø—É –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏
    return method.type === 'pickup';
  };

  const getPaymentMethodDisplayName = (method: string) => {
    if (!method) return '';
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ
    switch (method) {
      case 'cash':
        return '–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏';
      case 'card':
        return '–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π';
      case 'online':
        return '–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞';
      case 'transfer':
        return '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥';
      case 'usdt_payment':
        return '–û–ø–ª–∞—Ç–∞ USDT';
      default:
        return method || '–û–ø–ª–∞—Ç–∞';
    }
  };

  const getMoscowDate = (date?: Date) => {
    // –ü–æ–ª—É—á–∏—Ç—å –º–æ—Å–∫–æ–≤—Å–∫—É—é –¥–∞—Ç—É (UTC+3)
    const d = date ? new Date(date) : new Date();
    d.setMinutes(d.getMinutes() + d.getTimezoneOffset() + 180);
    return new Date(d.getFullYear(), d.getMonth(), d.getDate());
  };

  const formatDeliveryDate = (dateString: string) => {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ today/tomorrow/day3
    if (dateString === 'today') {
      const today = getMoscowDate();
      return `–°–µ–≥–æ–¥–Ω—è, ${today.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' })}`;
    }
    
    if (dateString === 'tomorrow') {
      const tomorrow = getMoscowDate();
      tomorrow.setDate(tomorrow.getDate() + 1);
      return `–ó–∞–≤—Ç—Ä–∞, ${tomorrow.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' })}`;
    }
    
    if (dateString === 'day3') {
      const day3 = getMoscowDate();
      day3.setDate(day3.getDate() + 2);
      return day3.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' });
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
    if (/^\d{4}-\d{2}-\d{2}$/.test(dateString)) {
      const date = new Date(dateString);
      const moscowNow = getMoscowDate();
      const moscowTomorrow = getMoscowDate();
      moscowTomorrow.setDate(moscowTomorrow.getDate() + 1);
      const moscowDelivery = getMoscowDate(date);

      if (moscowDelivery.getTime() === moscowNow.getTime()) {
        return `–°–µ–≥–æ–¥–Ω—è, ${date.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' })}`;
      } else if (moscowDelivery.getTime() === moscowTomorrow.getTime()) {
        return `–ó–∞–≤—Ç—Ä–∞, ${date.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' })}`;
      } else {
        return date.toLocaleDateString('ru-RU', { month: 'long', day: 'numeric' });
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return dateString;
  };

  const getDeliveryDateTime = (order: any) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –°–î–≠–ö
    const isCdek = order?.deliveryMethod?.name?.toLowerCase().includes('—Å–¥—ç–∫') || 
                   order?.deliveryMethod?.name?.toLowerCase().includes('cdek');
    
    // –î–ª—è –°–î–≠–ö –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–π –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    if (isCdek && order?.cdekDeliveryDate) {
      const cdekDate = new Date(order.cdekDeliveryDate);
      const formattedDate = cdekDate.toLocaleDateString('ru-RU', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
      });
      return `–û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: ${formattedDate}`;
    }
    
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É
    if (!order?.deliveryDate) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    const dateText = formatDeliveryDate(order.deliveryDate);
    
    if (order?.deliveryInterval) {
      return `${dateText} –≤ ${order.deliveryInterval}`;
    } else {
      return dateText;
    }
  };

  const handleCallRequest = () => {
    setShowCallConfirmation(true);
  };

  const confirmCall = async (confirmed: boolean) => {
    if (confirmed && order) {
      setIsCallRequestLoading(true);
      try {
        console.log('üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∑–≤–æ–Ω–∫–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞:', {
          orderId: order._id,
          orderNumber: order.orderNumber,
          status: order.status
        });

        const token = getAuthToken();
        if (!token) {
          console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
          alert('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
          setShowCallConfirmation(false);
          return;
        }

        const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5002/api'}/orders/${order._id}/call-request`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify({ callRequest: true })
        });

        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
          status: response.status,
          ok: response.ok
        });

        if (response.ok) {
          const result = await response.json();
          console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:', result);
          // broadcastOrderUpdate(order._id); // –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
          
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
          try {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –∑–≤–æ–Ω–∫–∞...');
            
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ–ª –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
            await new Promise(resolve => setTimeout(resolve, 500));
            
            const orderData = await ordersAPI.getOrderById(token, orderId);
            console.log('‚úÖ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω:', {
              callRequest: (orderData as any).callRequest,
              callStatus: (orderData as any).callStatus
            });
            setOrder(orderData);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            alert('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–≤–æ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –∑–≤–æ–Ω–∫–∞:', error);
            alert('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–≤–æ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
          }
        } else {
          const errorData = await response.json().catch(() => ({}));
          console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorData);
          alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∑–≤–æ–Ω–æ–∫: ${errorData.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∑–≤–æ–Ω–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∑–≤–æ–Ω–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
      } finally {
        setIsCallRequestLoading(false);
      }
    }
    setShowCallConfirmation(false);
  };

  if (isLoading) {
    return (
      <ProtectedRoute>
        <Header />
        <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50 pt-32">
          <div className="max-w-4xl mx-auto px-4 py-8">
            <div className="text-center py-12">
              <div className="w-16 h-16 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin mx-auto mb-4"></div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–∞</h3>
              <p className="text-gray-600">–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ...</p>
            </div>
          </div>
        </div>
        <Footer />
      </ProtectedRoute>
    );
  }

  if (error || !order) {
    return (
      <ProtectedRoute>
        <Header />
        <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50 pt-32">
          <div className="max-w-4xl mx-auto px-4 py-8">
            <div className="text-center py-12">
              <div className="w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <XCircle className="w-10 h-10 text-red-500" />
              </div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–û—à–∏–±–∫–∞</h3>
              <p className="text-gray-600 mb-6">{error}</p>
              <Link 
                href="/profile" 
                className="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl"
              >
                <ArrowLeft className="w-4 h-4" />
                <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å</span>
              </Link>
            </div>
          </div>
        </div>
        <Footer />
      </ProtectedRoute>
    );
  }

  return (
    <ProtectedRoute>
      <Header />
      <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50 pt-32">
        <div className="max-w-4xl mx-auto px-4 py-8">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white rounded-2xl shadow-lg overflow-hidden"
          >
            {/* Header */}
            <div className="relative bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 px-6 py-8 text-white overflow-hidden">
              <div className="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-purple-600/20"></div>
              <div className="absolute top-0 right-0 w-32 h-32 bg-white/10 rounded-full -translate-y-16 translate-x-16"></div>
              <div className="absolute bottom-0 left-0 w-24 h-24 bg-white/10 rounded-full translate-y-12 -translate-x-12"></div>
              
              <div className="relative flex items-center justify-between">
                <div className="flex items-center space-x-4">
                  <motion.div 
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ delay: 0.2, type: "spring", stiffness: 200 }}
                    className="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center border border-white/30 shadow-lg"
                  >
                    <Package className="w-8 h-8" />
                  </motion.div>
                  <motion.div
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: 0.3 }}
                  >
                    <h1 className="text-2xl font-bold">
                      –ó–∞–∫–∞–∑ #{order.orderNumber}
                    </h1>
                    <p className="text-blue-100 flex items-center space-x-2">
                      <Calendar className="w-4 h-4" />
                      <span>
                        {new Date(order.createdAt).toLocaleDateString('ru-RU', {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric',
                          hour: '2-digit',
                          minute: '2-digit'
                        })}
                      </span>
                    </p>
                  </motion.div>
                </div>
                <motion.div 
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.4 }}
                >
                  <Link 
                    href="/profile"
                    className="bg-white/20 hover:bg-white/30 backdrop-blur-sm px-4 py-2 rounded-lg flex items-center space-x-2 transition-all duration-200 border border-white/30 shadow-lg"
                  >
                    <ArrowLeft className="w-4 h-4" />
                    <span>–ù–∞–∑–∞–¥</span>
                  </Link>
                </motion.div>
              </div>
            </div>

            <div className="p-6">
              {/* Status */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.1 }}
                className="mb-6"
              >
                <div className="flex items-center space-x-3 p-4 bg-gray-50 rounded-xl">
                  <OrderStatus status={order.status} size="lg" />
                </div>
              </motion.div>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* Order Items */}
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.2 }}
                  className="space-y-4"
                >
                  <h2 className="text-xl font-semibold text-gray-900 mb-4">–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h2>
                  <div className="space-y-3">
                    {order.items.map((item: any, index: number) => (
                      <motion.div
                        key={item._id}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.1 * index }}
                        className="flex items-center space-x-4 p-4 bg-gray-50 rounded-lg"
                      >
                        <img 
                          src={item.productId.mainImage} 
                          alt={item.productId.name}
                          className="w-16 h-16 object-cover rounded-lg"
                        />
                        <div className="flex-1">
                          <p className="font-medium text-gray-900">{item.productId.name}</p>
                          <p className="text-sm text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.quantity}</p>
                        </div>
                        <div className="text-right">
                          <p className="font-bold text-gray-900">{formatCurrency(item.price * item.quantity)}</p>
                          <p className="text-sm text-gray-600">{formatCurrency(item.price)} –∑–∞ —à—Ç.</p>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </motion.div>

                {/* Order Details */}
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.3 }}
                  className="space-y-4"
                >
                  <h2 className="text-xl font-semibold text-gray-900 mb-4">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h2>
                  
                  {/* Payment Info */}
                  <div className="space-y-3">
                    {order.paymentMethod && (
                      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                        <div className="p-2 bg-blue-100 rounded-lg">
                          <DollarSign className="w-5 h-5 text-blue-600" />
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</p>
                          <p className="text-sm text-gray-600">{getPaymentMethodDisplayName(order.paymentMethod)}</p>
                        </div>
                      </div>
                    )}

                    {order.deliveryMethod && (
                      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                        <div className={`p-2 ${isPickup(order.deliveryMethod) ? 'bg-orange-100' : 'bg-green-100'} rounded-lg`}>
                          <Truck className={`w-5 h-5 ${isPickup(order.deliveryMethod) ? 'text-orange-600' : 'text-green-600'}`} />
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</p>
                          <p className="text-sm text-gray-600">{getDeliveryMethodDisplayName(order.deliveryMethod)}</p>
                        </div>
                      </div>
                    )}

                    {(order.deliveryDate || (order.cdekDeliveryDate && (order?.deliveryMethod?.name?.toLowerCase().includes('—Å–¥—ç–∫') || order?.deliveryMethod?.name?.toLowerCase().includes('cdek')))) && (
                      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                        <div className={`p-2 ${isPickup(order.deliveryMethod) ? 'bg-orange-100' : 'bg-purple-100'} rounded-lg`}>
                          <Calendar className={`w-5 h-5 ${isPickup(order.deliveryMethod) ? 'text-orange-600' : 'text-purple-600'}`} />
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">
                            {isPickup(order.deliveryMethod) ? '–î–∞—Ç–∞ —Å–∞–º–æ–≤—ã–≤–æ–∑–∞' : '–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏'}
                          </p>
                          <p className="text-sm text-gray-600">
                            {getDeliveryDateTime(order)}
                          </p>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* Delivery Address or Pickup Address */}
                  {(order.deliveryAddress || (isPickup(order.deliveryMethod) && order.deliveryMethod?.address)) && (
                    <div className="space-y-3">
                      <h3 className="text-lg font-semibold text-gray-900">
                        {isPickup(order.deliveryMethod) ? '–ê–¥—Ä–µ—Å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞' : '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'}
                      </h3>
                      <div className="space-y-2">
                        <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                          <div className={`p-2 ${isPickup(order.deliveryMethod) ? 'bg-orange-100' : 'bg-blue-100'} rounded-lg`}>
                            <MapPin className={`w-5 h-5 ${isPickup(order.deliveryMethod) ? 'text-orange-600' : 'text-blue-600'}`} />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">
                              {isPickup(order.deliveryMethod) ? '–ê–¥—Ä–µ—Å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞' : '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'}
                            </p>
                            <p className="text-sm text-gray-600">
                              {isPickup(order.deliveryMethod) 
                                ? (order.deliveryAddress || order.deliveryMethod?.address)
                                : order.deliveryAddress
                              }
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}

                  {/* –°–î–≠–ö –ü–í–ó - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –°–î–≠–ö –∑–∞–∫–∞–∑–æ–≤ */}
                  {(order.cdekPVZ || order.pvzCdek || order.cdekPvzAddress) && (
                    <div className="space-y-3">
                      <h3 className="text-lg font-semibold text-gray-900">–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –°–î–≠–ö</h3>
                      <div className="space-y-2">
                        <div className="flex items-center space-x-3 p-3 bg-green-50 rounded-lg">
                          <div className="p-2 bg-green-100 rounded-lg">
                            <MapPin className="w-5 h-5 text-green-600" />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –°–î–≠–ö</p>
                            <p className="text-sm text-gray-600">
                              {order.cdekPvzAddress || order.cdekPVZ?.address_full || order.cdekPVZ?.address || order.cdekPVZ?.name || order.pvzCdek?.address_full || order.pvzCdek?.address || order.pvzCdek?.name}
                            </p>
                            {order.cdekPVZ?.code && <p className="text-xs text-gray-500 mt-1">–ö–æ–¥ –ü–í–ó: {order.cdekPVZ.code}</p>}
                            {order.pvzCdek?.code && <p className="text-xs text-gray-500 mt-1">–ö–æ–¥ –ü–í–ó: {order.pvzCdek.code}</p>}
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </motion.div>
              </div>

              {/* Order Summary */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4 }}
                className="mt-8 p-6 bg-gray-50 rounded-xl"
              >
                <h3 className="text-lg font-semibold text-gray-900 mb-4">–ò—Ç–æ–≥–æ –ø–æ –∑–∞–∫–∞–∑—É</h3>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-gray-600">–¢–æ–≤–∞—Ä—ã:</span>
                    <span className="font-medium">{formatCurrency(order.total)}</span>
                  </div>
                  {order.shipping > 0 && (
                    <div className="flex justify-between">
                      <span className="text-gray-600">–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                      <span className="font-medium">{formatCurrency(order.shipping)}</span>
                    </div>
                  )}
                  <div className="border-t border-gray-200 pt-2">
                    <div className="flex justify-between">
                      <span className="text-lg font-semibold text-gray-900">–ò—Ç–æ–≥–æ:</span>
                      <span className="text-lg font-bold text-gray-900">{formatCurrency(order.total)}</span>
                    </div>
                  </div>
                </div>
              </motion.div>

              {order.notes && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.5 }}
                  className="mt-6 p-4 bg-blue-50 rounded-xl"
                >
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫ –∑–∞–∫–∞–∑—É</h3>
                  <p className="text-gray-700">{order.notes}</p>
                </motion.div>
              )}


              {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –µ—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –Ω–µ –∑–∞–ø—Ä–æ—à–µ–Ω –ò–õ–ò –µ—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω */}
              {(!order.callRequest || order.callStatus === 'completed') && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.6 }}
                  className="mt-6"
                >
                  <motion.button
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.7 }}
                    onClick={handleCallRequest}
                    disabled={isCallRequestLoading}
                    className="w-full inline-flex items-center justify-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-4 rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl text-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {isCallRequestLoading ? (
                      <>
                        <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                        <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                      </>
                    ) : (
                      <>
                        <Phone className="w-5 h-5" />
                        <span>–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ</span>
                      </>
                    )}
                  </motion.button>
                </motion.div>
              )}

              {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å, –µ—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ —É–∂–µ –∑–∞–ø—Ä–æ—à–µ–Ω */}
              {order.callRequest && order.callStatus === 'requested' && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.6 }}
                  className="mt-6 p-4 bg-green-50 rounded-xl border border-green-200"
                >
                  <div className="flex items-center space-x-3">
                    <div className="p-2 bg-green-100 rounded-lg">
                      <Phone className="w-5 h-5 text-green-600" />
                    </div>
                    <div>
                      <p className="font-medium text-green-900">–ó–∞–ø—Ä–æ—Å –∑–≤–æ–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</p>
                      <p className="text-sm text-green-700">–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>
                    </div>
                  </div>
                </motion.div>
              )}
            </div>
          </motion.div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞ */}
      {showCallConfirmation && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.8 }}
            className="bg-white rounded-2xl p-6 max-w-md w-full shadow-2xl"
          >
            <div className="text-center mb-6">
              <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <Phone className="w-8 h-8 text-blue-600" />
              </div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">
                –ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤–∞–º?
              </h3>
              <p className="text-gray-600 mb-4">
                –¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –≤–∞–º –ø–æ–∑–≤–æ–Ω–∏–ª–∏?
              </p>
              {order?.shippingAddress?.phone && (
                <div className="bg-gray-50 rounded-lg p-3 mb-4">
                  <p className="text-sm text-gray-600 mb-1">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</p>
                  <p className="text-sm font-medium text-gray-900">{order.shippingAddress.phone}</p>
                </div>
              )}
            </div>
            
            <div className="flex space-x-3">
              <button
                onClick={() => confirmCall(false)}
                className="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-3 rounded-lg transition-colors"
              >
                –ù–µ—Ç
              </button>
              <button
                onClick={() => confirmCall(true)}
                className="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-3 rounded-lg transition-colors"
              >
                –î–∞
              </button>
            </div>
          </motion.div>
        </div>
      )}

      <Footer />
    </ProtectedRoute>
  );
} 