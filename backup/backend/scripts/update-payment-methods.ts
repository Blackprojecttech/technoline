import mongoose from 'mongoose';
import PaymentMethod from '../src/models/PaymentMethod';

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/technoline';

async function updatePaymentMethods() {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–¥–∞–º–∏
    const updates = [
      {
        systemCode: 'cash_on_delivery',
        displayTitle: '–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏',
        displayDescription: '–û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ',
        features: ['–ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ', '–£–¥–æ–±–Ω–æ'],
        icon: 'üí≥',
        color: 'blue',
        specialNote: '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏',
        noteType: 'warning'
      },
      {
        systemCode: 'bank_card',
        displayTitle: '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞',
        displayDescription: '–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ',
        features: ['–ë–µ–∑–æ–ø–∞—Å–Ω–æ', '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ', '–í—Å–µ –∫–∞—Ä—Ç—ã'],
        icon: 'üí≥',
        color: 'green',
        specialNote: '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π —à–ª—é–∑',
        noteType: 'info'
      },
      {
        systemCode: 'sberbank_transfer',
        displayTitle: '–ü–µ—Ä–µ–≤–æ–¥ –°–±–µ—Ä–±–∞–Ω–∫',
        displayDescription: '–ü–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω –∏–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        features: ['–ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏', '–ù–∞–¥–µ–∂–Ω–æ', '–ë—ã—Å—Ç—Ä–æ'],
        icon: 'üè¶',
        color: 'green',
        specialNote: '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É',
        noteType: 'info'
      },
      {
        systemCode: 'credit_purchase',
        displayTitle: '–ü–æ–∫—É–ø–∫–∞ –≤ –∫—Ä–µ–¥–∏—Ç',
        displayDescription: '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–∫—É–ø–∫—É –≤ –∫—Ä–µ–¥–∏—Ç —á–µ—Ä–µ–∑ –°–±–µ—Ä–±–∞–Ω–∫ –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ',
        features: ['–†–∞—Å—Å—Ä–æ—á–∫–∞', '–í—ã–≥–æ–¥–Ω–æ', '–ü—Ä–æ—Å—Ç–æ'],
        icon: 'üí∞',
        color: 'purple',
        specialNote: '–û–¥–æ–±—Ä–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 5 –º–∏–Ω—É—Ç',
        noteType: 'success'
      },
      {
        systemCode: 'usdt',
        displayTitle: '–û–ø–ª–∞—Ç–∞ USDT',
        displayDescription: '–û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π USDT —á–µ—Ä–µ–∑ —Å–µ—Ç—å TRC20',
        features: ['–ê–Ω–æ–Ω–∏–º–Ω–æ', '–ë—ã—Å—Ç—Ä–æ', '–ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏'],
        icon: '‚Çø',
        color: 'yellow',
        specialNote: '–û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 10-30 –º–∏–Ω—É—Ç',
        noteType: 'success'
      }
    ];

    for (const update of updates) {
      const result = await PaymentMethod.findOneAndUpdate(
        { systemCode: update.systemCode },
        { 
          $set: {
            displayTitle: update.displayTitle,
            displayDescription: update.displayDescription,
            features: update.features,
            icon: update.icon,
            color: update.color,
            specialNote: update.specialNote,
            noteType: update.noteType
          }
        },
        { new: true }
      );

      if (result) {
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${result.name}`);
        console.log(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${update.displayTitle}`);
        console.log(`   - –û–ø–∏—Å–∞–Ω–∏–µ: ${update.displayDescription}`);
        console.log(`   - –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: ${update.features.join(', ')}`);
        console.log(`   - –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ${update.specialNote}`);
        console.log(`   - –¢–∏–ø: ${update.noteType}`);
      } else {
        console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —Å –∫–æ–¥–æ–º: ${update.systemCode}`);
      }
    }

    console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
  }
}

updatePaymentMethods(); 