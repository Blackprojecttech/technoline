import mongoose from 'mongoose';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/technoline-store';

async function rebuildDebtIndexes() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(MONGODB_URI);
    console.log('üì¶ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ MongoDB');

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥–æ–ª–≥–æ–≤
    const debtsCollection = mongoose.connection.collection('debts');
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã...');
    await debtsCollection.dropIndexes();
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã...');
    await debtsCollection.createIndex({ id: 1 }, { unique: true });
    await debtsCollection.createIndex({ supplierId: 1 });
    await debtsCollection.createIndex({ status: 1 });
    await debtsCollection.createIndex({ date: -1 });
    await debtsCollection.createIndex({ dueDate: 1 });
    await debtsCollection.createIndex({ createdBy: 1 });

    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üëã –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç MongoDB');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
rebuildDebtIndexes().catch(console.error); 