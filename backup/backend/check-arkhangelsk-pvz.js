const fetch = require('node-fetch');
require('dotenv').config();

async function getCdekToken() {
  try {
    const response = await fetch('https://api.cdek.ru/v2/oauth/token?parameters', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams({
        grant_type: 'client_credentials',
        client_id: process.env.CDEK_CLIENT_ID || 'EMscd6r9JnFiQ3bLoyjJY6eM78JrJceI',
        client_secret: process.env.CDEK_CLIENT_SECRET || 'PjLZPKBgI86kgKNzZI0'
      })
    });

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: ${response.status}`);
    }

    const data = await response.json();
    return data.access_token;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
    return null;
  }
}

async function checkArkhangelskPvz() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ü–í–ó –≤ –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–µ...');
    
    const token = await getCdekToken();
    if (!token) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω');
      return;
    }
    
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
    
    const arkhPvzResponse = await fetch('https://api.cdek.ru/v2/deliverypoints?city_code=402', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (arkhPvzResponse.ok) {
      const arkhPvzList = await arkhPvzResponse.json();
      console.log('üè™ –í—Å–µ –ü–í–ó –≤ –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–µ:', arkhPvzList.length);
      
      arkhPvzList.forEach((pvz, index) => {
        console.log(`${index + 1}. ${pvz.name} (${pvz.code})`);
        console.log(`   –ê–¥—Ä–µ—Å: ${pvz.address}`);
        console.log(`   –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: ${pvz.work_time}`);
        console.log('');
      });
      
      console.log('üéØ –í—ã–≤–æ–¥—ã:');
      console.log('  - –í –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–µ –µ—Å—Ç—å –ü–í–ó, –Ω–æ –ù–ï–¢ –Ω–∞ —É–ª. –¢–µ—Ä–µ—Ö–∏–Ω–∞');
      console.log('  - –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ü–í–ó –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ');
      
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ü–í–ó:', arkhPvzResponse.status);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

checkArkhangelskPvz(); 