// –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ change-history.tsx (—Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã –∏ —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å) –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ä–æ—É—Ç–∏–Ω–≥–∞.
// –î–ª—è —Ä–∞–±–æ—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–π —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ framer-motion: npm install framer-motion
import React, { useEffect, useState, ReactNode } from 'react';
import { Card, Typography, Button, Modal, message, Popconfirm } from 'antd';
// –£–¥–∞–ª—è—é –∏–º–ø–æ—Ä—Ç Layout
// import Layout from '../components/layout/Layout';
import { AnimatePresence, motion } from 'framer-motion';
import { CopyOutlined } from '@ant-design/icons';

interface ChangeLogEntry {
  timestamp: string;
  action: string;
  file?: string;
  lines?: string;
  old?: string;
  new?: string;
  description?: string;
  // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–∫–∞–∑–æ–≤
  type?: string;
  delivery_action?: string;
  order_action?: string;
  details?: any;
}

const fetchChangelog = async (): Promise<ChangeLogEntry[]> => {
  try {
    const baseUrl = import.meta.env.VITE_API_URL || 'https://technoline-api.loca.lt/api';
    const res = await fetch(`${baseUrl}/admin/changelog`);
    if (!res.ok) return [];
    return await res.json();
  } catch {
    return [];
  }
};

const rollbackToStep = async (step: number) => {
  const baseUrl = import.meta.env.VITE_API_URL || 'https://technoline-api.loca.lt/api';
  const res = await fetch(`${baseUrl}/admin/changelog/rollback`, {
    method: 'POST',
    headers: { 
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ step })
  });
  if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞');
  return await res.json();
};

// --- DIFF UTILS ---
function getLineDiffs(oldStr: string, newStr: string) {
  const oldLines = oldStr ? oldStr.split('\n') : [];
  const newLines = newStr ? newStr.split('\n') : [];
  const maxLen = Math.max(oldLines.length, newLines.length);
  const diffs: { oldLine: string | null, newLine: string | null, type: 'same' | 'removed' | 'added' | 'changed' }[] = [];
  for (let i = 0; i < maxLen; i++) {
    const o = oldLines[i] ?? null;
    const n = newLines[i] ?? null;
    if (o === n) {
      diffs.push({ oldLine: o, newLine: n, type: 'same' });
    } else if (o && !n) {
      diffs.push({ oldLine: o, newLine: null, type: 'removed' });
    } else if (!o && n) {
      diffs.push({ oldLine: null, newLine: n, type: 'added' });
    } else {
      diffs.push({ oldLine: o, newLine: n, type: 'changed' });
    }
  }
  return diffs;
}

// –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—Ç–ª–∏—á–∏–π –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏ (–ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ, –∫—Ä–∞—Å–Ω—ã–º)
function charDiff(a: string, b: string) {
  // LCS (Longest Common Subsequence) –¥–ª—è –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–≥–æ diff
  const m = a.length, n = b.length;
  const dp: number[][] = Array(m + 1).fill(0).map(() => Array(n + 1).fill(0));
  for (let i = 0; i < m; i++) for (let j = 0; j < n; j++)
    if (a[i] === b[j]) dp[i + 1][j + 1] = dp[i][j] + 1;
    else dp[i + 1][j + 1] = Math.max(dp[i][j + 1], dp[i + 1][j]);
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ diff
  let i = m, j = n;
  const resA: (string | JSX.Element)[] = [];
  const resB: (string | JSX.Element)[] = [];
  while (i > 0 && j > 0) {
    if (a[i - 1] === b[j - 1]) {
      resA.unshift(a[i - 1]);
      resB.unshift(b[j - 1]);
      i--; j--;
    } else if (dp[i][j - 1] >= dp[i - 1][j]) {
      resB.unshift(<span style={{ background: '#ffccc7', color: '#a8071a' }}>{b[j - 1]}</span>);
      j--;
    } else {
      resA.unshift(<span style={{ background: '#ffccc7', color: '#a8071a' }}>{a[i - 1]}</span>);
      i--;
    }
  }
  while (i > 0) {
    resA.unshift(<span style={{ background: '#ffccc7', color: '#a8071a' }}>{a[i - 1]}</span>);
    i--;
  }
  while (j > 0) {
    resB.unshift(<span style={{ background: '#ffccc7', color: '#a8071a' }}>{b[j - 1]}</span>);
    j--;
  }
  return { old: <>{resA}</>, new: <>{resB}</> };
}

const ChangeHistoryPage: React.FC = () => {
  const [changelog, setChangelog] = useState<ChangeLogEntry[]>([]);
  const [selected, setSelected] = useState<number | null>(null);
  const [loading, setLoading] = useState(true);
  const [rollbackModal, setRollbackModal] = useState<{open: boolean, step: number|null}>({open: false, step: null});
  const [rollbackLoading, setRollbackLoading] = useState(false);
  const [rollbackError, setRollbackError] = useState<string|null>(null);
  const [rollbackSuccess, setRollbackSuccess] = useState(false);
  const [viewModal, setViewModal] = useState<{open: boolean, entry: ChangeLogEntry | null}>({open: false, entry: null});

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }, []);

  useEffect(() => {
    fetchChangelog().then(data => {
      // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å rollback
      const filtered = data.filter(entry => {
        if (entry.action === 'rollback') return false;
        if (entry.description && entry.description.toLowerCase().includes('rollback')) return false;
        return true;
      });
      console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', data.length);
      console.log('üìä –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π:', filtered.length);
      setChangelog(filtered.reverse());
      setLoading(false);
    });
  }, []);

  const handleRollback = async () => {
    if (rollbackModal.step === null) return;
    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫ —à–∞–≥—É:', rollbackModal.step);
    setRollbackLoading(true);
    setRollbackError(null);
    try {
      await rollbackToStep(rollbackModal.step);
      setRollbackSuccess(true);
      setTimeout(() => {
        setRollbackModal({open: false, step: null});
        setRollbackSuccess(false);
        window.location.reload();
      }, 1500);
    } catch (e: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', e);
      setRollbackError(e.message || '–û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞');
    } finally {
      setRollbackLoading(false);
    }
  };

  const handleDeleteHistory = async () => {
    try {
      const baseUrl = import.meta.env.VITE_API_URL || 'https://technoline-api.loca.lt/api';
      const res = await fetch(`${baseUrl}/admin/changelog/clear`, { 
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await res.json();
      
      if (!res.ok) {
        throw new Error(data.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏');
      }
      
      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setChangelog([]);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      message.success(data.message || '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞');
      
      console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞:', data);
    } catch (e: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:', e);
      message.error(e.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏');
    }
  };

  return (
    <div style={{ padding: 24 }}>
      <Card>
        <Typography.Title level={2} style={{ margin: 0, textAlign: 'center' }}>
          –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        </Typography.Title>
        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: 24 }}>
          <Popconfirm
            title="–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π?"
            onConfirm={handleDeleteHistory}
            okText="–î–∞, —É–¥–∞–ª–∏—Ç—å"
            cancelText="–û—Ç–º–µ–Ω–∞"
          >
            <Button danger type="primary" style={{ fontWeight: 500 }}>
              –£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
            </Button>
          </Popconfirm>
        </div>
        {loading ? (
          <div className="flex justify-center items-center h-32">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600" />
          </div>
        ) : changelog.length === 0 ? (
          <div className="text-center text-gray-500">–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—É—Å—Ç–∞</div>
        ) : (
          <AnimatePresence>
            <div className="flex flex-col gap-8 max-w-2xl mx-auto">
              {changelog.slice(0, 50).map((entry, idx) => (
                <motion.div
                  key={entry.timestamp + entry.file + idx}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 20 }}
                  transition={{ duration: 0.4 }}
                  style={{ background: '#fafcff', borderRadius: 12, boxShadow: '0 2px 8px #f0f1f2', padding: 24, border: '1px solid #f0f0f0', marginBottom: 0 }}
                >
                  {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏ */}
                  <div style={{ color: '#222', fontSize: 15, marginBottom: 8, wordBreak: 'break-all' }}>
                    {entry.file || entry.description || '–ò–∑–º–µ–Ω–µ–Ω–∏–µ'}
                  </div>
                  <div style={{ fontSize: 12, color: '#888', marginBottom: 8 }}>{new Date(entry.timestamp).toLocaleString('ru-RU')}</div>
                  <div style={{ fontSize: 13, color: '#555', marginBottom: 8 }}>
                    {entry.action === 'add' && '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞'}
                    {entry.action === 'change' && '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞'}
                    {entry.action === 'unlink' && '–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞'}
                    {entry.action === 'delivery_change' && `–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏: ${entry.delivery_action}`}
                    {entry.action === 'order_change' && `–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞: ${entry.order_action}`}
                  </div>
                  {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–∫–∞–∑–æ–≤ */}
                  {entry.details && (
                    <div style={{ fontSize: 12, color: '#666', marginBottom: 8, padding: 8, background: '#f5f5f5', borderRadius: 4 }}>
                      <strong>–î–µ—Ç–∞–ª–∏:</strong> {JSON.stringify(entry.details, null, 2)}
                    </div>
                  )}
                  <div style={{ display: 'flex', gap: 12 }}>
                    <Button
                      type="primary"
                      danger
                      size="large"
                      style={{ minWidth: 180, fontWeight: 500, fontSize: 16, borderRadius: 8, boxShadow: '0 2px 8px #f0f1f2' }}
                      onClick={() => setRollbackModal({open: true, step: idx})}
                      loading={rollbackLoading}
                    >
                      –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                    </Button>
                    <Button
                      type="default"
                      size="large"
                      style={{ minWidth: 120, fontWeight: 500, fontSize: 16, borderRadius: 8 }}
                      onClick={() => setViewModal({open: true, entry})}
                    >
                      –ü—Ä–æ—Å–º–æ—Ç—Ä
                    </Button>
                  </div>
                </motion.div>
              ))}
            </div>
          </AnimatePresence>
        )}
        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–∫–∞—Ç–∞ */}
        <AnimatePresence>
          {rollbackModal.open && (
            <Modal
              open={rollbackModal.open}
              onCancel={() => setRollbackModal({open: false, step: null})}
              onOk={handleRollback}
              okText={rollbackLoading ? '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ...' : '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'}
              cancelText="–û—Ç–º–µ–Ω–∞"
              confirmLoading={rollbackLoading}
              centered
              title={<Typography.Title level={4} style={{ margin: 0 }}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ</Typography.Title>}
            >
              <div style={{ marginBottom: 12 }}>–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∫ —ç—Ç–æ–º—É —à–∞–≥—É? –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–µ–≥–æ –±—É–¥—É—Ç –æ—Ç–º–µ–Ω–µ–Ω—ã.</div>
              {rollbackError && <div style={{ color: '#d4380d', marginBottom: 8 }}>{rollbackError}</div>}
              {rollbackSuccess && <div style={{ color: '#389e0d', marginBottom: 8 }}>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</div>}
            </Modal>
          )}
        </AnimatePresence>
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π */}
      <Modal
        open={viewModal.open}
        onCancel={() => setViewModal({open: false, entry: null})}
        footer={null}
        centered
        title={<Typography.Title level={4} style={{ margin: 0 }}>–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ</Typography.Title>}
        width={900}
      >
        {viewModal.entry && (
          <div>
            <div style={{ color: '#222', fontSize: 15, marginBottom: 8, wordBreak: 'break-all' }}>{viewModal.entry.file}</div>
            <div style={{ fontSize: 12, color: '#888', marginBottom: 16 }}>{new Date(viewModal.entry.timestamp).toLocaleString('ru-RU')}</div>
            {(viewModal.entry.old !== undefined || viewModal.entry.new !== undefined) ? (
              <div style={{ display: 'flex', gap: 12 }}>
                <div style={{ flex: 1, minWidth: 0 }}>
                  <div style={{ display: 'flex', alignItems: 'center', marginBottom: 4 }}>
                    <div style={{ fontWeight: 500, color: '#d4380d', flex: 1 }}>–ë—ã–ª–æ</div>
                    <Button
                      icon={<CopyOutlined />}
                      size="small"
                      onClick={() => {
                        if (viewModal.entry && viewModal.entry.old !== undefined) {
                          navigator.clipboard.writeText(viewModal.entry.old).then(() => message.success('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!'));
                        }
                      }}
                    >
                      –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                  <div style={{ background: '#fff1f0', borderRadius: 6, padding: 8, fontSize: 13, maxHeight: 400, overflowY: 'auto', overflowX: 'hidden' }}>
                    {getLineDiffs(viewModal.entry.old || '', viewModal.entry.new || '').map((diff, idx) => (
                      <div key={idx} style={{
                        background: diff.type === 'removed' ? '#ffeaea' : diff.type === 'changed' ? '#fffbe6' : undefined,
                        color: diff.type === 'removed' ? '#d4380d' : diff.type === 'changed' ? '#a8071a' : '#222',
                        textDecoration: diff.type === 'removed' ? 'line-through' : undefined,
                        whiteSpace: 'pre-wrap',
                        fontFamily: 'monospace',
                        fontSize: 13,
                        padding: '0 2px',
                      }}>
                        {diff.type === 'changed' ? charDiff(diff.oldLine || '', diff.newLine || '').old : diff.oldLine}
                      </div>
                    ))}
                  </div>
                </div>
                <div style={{ flex: 1, minWidth: 0 }}>
                  <div style={{ display: 'flex', alignItems: 'center', marginBottom: 4 }}>
                    <div style={{ fontWeight: 500, color: '#389e0d', flex: 1 }}>–°—Ç–∞–ª–æ</div>
                    <Button
                      icon={<CopyOutlined />}
                      size="small"
                      onClick={() => {
                        if (viewModal.entry && viewModal.entry.new !== undefined) {
                          navigator.clipboard.writeText(viewModal.entry.new).then(() => message.success('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!'));
                        }
                      }}
                    >
                      –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                  <div style={{ background: '#f6ffed', borderRadius: 6, padding: 8, fontSize: 13, maxHeight: 400, overflowY: 'auto', overflowX: 'hidden' }}>
                    {getLineDiffs(viewModal.entry.old || '', viewModal.entry.new || '').map((diff, idx) => (
                      <div key={idx} style={{
                        background: diff.type === 'added' ? '#eaffea' : diff.type === 'changed' ? '#fffbe6' : undefined,
                        color: diff.type === 'added' ? '#389e0d' : diff.type === 'changed' ? '#a8071a' : '#222',
                        fontWeight: diff.type === 'added' ? 500 : undefined,
                        whiteSpace: 'pre-wrap',
                        fontFamily: 'monospace',
                        fontSize: 13,
                        padding: '0 2px',
                      }}>
                        {diff.type === 'changed' ? charDiff(diff.oldLine || '', diff.newLine || '').new : diff.newLine}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            ) : (
              <div style={{ color: '#888', fontSize: 14 }}>–ù–µ—Ç diff –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
            )}
          </div>
        )}
      </Modal>
      </Card>
    </div>
  );
};

export default ChangeHistoryPage; 